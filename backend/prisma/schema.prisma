// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userName  String    @unique
  email     String    @unique
  hash      String
  image     String?
  firstName String?
  lastName  String?
  token     Boolean   @default(false)
  game      GameData[]
  online    Boolean   @default(false)
  sentRequests   FriendRequest[] @relation("Sender")
  // frendship       Friendship[] @relation("Friendship")
  friendRequests    FriendRequest[] @relation("Receiver")
  @@map("Users")
}

// model Friendship {
//   id        Int       @id @default(autoincrement())
//   createdAt DateTime  @default(now())
//   updatedAt DateTime  @updatedAt
//   senderId  Int
//   receiverId Int
//   // sender    User      @relation("Sender", fields: [senderId], references: [id])
//   // receiver  User      @relation("Receiver", fields: [receiverId], references: [id])
//   @@map("Friendships")
// }


model FriendRequest {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  senderId  Int 
  receiverId Int
  sender    User      @relation("Sender", fields: [senderId], references: [id])
  receiver  User      @relation("Receiver", fields: [receiverId], references: [id])
  @@map("FriendRequests")
}


model GameData {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  gameName  String?
  users     User[] 
  // whatchingUser User[] @relation("WatchingUser")
  @@map("GameDatas")
}

// model Game {
//   id         Int       @id @default(autoincrement())
//   createdAt  DateTime  @default(now())
//   updatedAt  DateTime  @updatedAt
//   gameName   String
//   gameDataId Int
//   gameData   GameData  @relation(fields: [gameDataId], references: [id])
  
//   @@map("Games")
// }

